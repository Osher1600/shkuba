<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.kotlin.compose)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.dinari.shkuba&quot;&#10;    compileSdk = 35&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.dinari.shkuba&quot;&#10;        minSdk = 29&#10;        targetSdk = 35&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;&#10;        ndk {&#10;            abiFilters += listOf(&quot;arm64-v8a&quot;, &quot;armeabi-v7a&quot;, &quot;x86&quot;, &quot;x86_64&quot;)&#10;        }&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;    }&#10;    composeOptions {&#10;        kotlinCompilerExtensionVersion = &quot;1.5.4&quot;&#10;    }&#10;    externalNativeBuild {&#10;        cmake {&#10;            path = file(&quot;src/main/cpp/CMakeLists.txt&quot;)&#10;            version = &quot;3.22.1&quot;&#10;        }&#10;    }&#10;    ndkVersion = &quot;25.2.9519653&quot;&#10;&#10;    sourceSets {&#10;        getByName(&quot;main&quot;) {&#10;            jniLibs.srcDirs(&quot;src/main/jniLibs&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.compose)&#10;    implementation(platform(libs.androidx.compose.bom))&#10;    implementation(libs.androidx.ui)&#10;    implementation(libs.androidx.ui.graphics)&#10;    implementation(libs.androidx.ui.tooling.preview)&#10;    implementation(libs.androidx.material3)&#10;    &#10;    // ViewModel&#10;    implementation(&quot;androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7&quot;)&#10;    &#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;    androidTestImplementation(platform(libs.androidx.compose.bom))&#10;    androidTestImplementation(libs.androidx.ui.test.junit4)&#10;    debugImplementation(libs.androidx.ui.tooling)&#10;    debugImplementation(libs.androidx.ui.test.manifest)&#10;&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.dinari.shkuba&quot;&#10;    compileSdk = 35&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.dinari.shkuba&quot;&#10;        minSdk = 29&#10;        targetSdk = 35&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;&#10;        ndk {&#10;            abiFilters += listOf(&quot;arm64-v8a&quot;, &quot;armeabi-v7a&quot;, &quot;x86&quot;, &quot;x86_64&quot;)&#10;        }&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;    }&#10;    composeOptions {&#10;        kotlinCompilerExtensionVersion = &quot;1.5.10&quot;&#10;    }&#10;    externalNativeBuild {&#10;        cmake {&#10;            path = file(&quot;src/main/cpp/CMakeLists.txt&quot;)&#10;            version = &quot;3.22.1&quot;&#10;        }&#10;    }&#10;    ndkVersion = &quot;25.2.9519653&quot;&#10;&#10;    sourceSets {&#10;        getByName(&quot;main&quot;) {&#10;            jniLibs.srcDirs(&quot;src/main/jniLibs&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.compose)&#10;    implementation(platform(libs.androidx.compose.bom))&#10;    implementation(libs.androidx.ui)&#10;    implementation(libs.androidx.ui.graphics)&#10;    implementation(libs.androidx.ui.tooling.preview)&#10;    implementation(libs.androidx.material3)&#10;    &#10;    // ViewModel&#10;    implementation(&quot;androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7&quot;)&#10;    &#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;    androidTestImplementation(platform(libs.androidx.compose.bom))&#10;    androidTestImplementation(libs.androidx.ui.test.junit4)&#10;    debugImplementation(libs.androidx.ui.tooling)&#10;    debugImplementation(libs.androidx.ui.test.manifest)&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/shkuba/Board.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/shkuba/Board.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.dinari.shkuba&#10;&#10;class Board {&#10;    // Native pointer to the C++ Board instance&#10;    private var nativeHandle: Long = 0&#10;&#10;    init {&#10;        nativeHandle = nativeCreate()&#10;    }&#10;&#10;    // JNI: Create C++ Board instance&#10;    private external fun nativeCreate(): Long&#10;&#10;    // JNI: Clean up C++ Board instance&#10;    private external fun nativeDestroy(handle: Long)&#10;&#10;    // JNI: Get board size&#10;    external fun getBoardSize(): Int&#10;&#10;    // JNI: Add card to board&#10;    external fun addToBoard(suit: Int, rank: Int)&#10;&#10;    // JNI: Get all cards on board as array of [suit, rank] pairs&#10;    external fun getBoard(): IntArray&#10;&#10;    // Helper function to convert board data to Card objects&#10;    fun getBoardCards(): List&lt;Card&gt; {&#10;        val boardData = getBoard()&#10;        val cards = mutableListOf&lt;Card&gt;()&#10;        for (i in boardData.indices step 2) {&#10;            if (i + 1 &lt; boardData.size) {&#10;                cards.add(Card(boardData[i], boardData[i + 1]))&#10;            }&#10;        }&#10;        return cards&#10;    }&#10;&#10;    protected fun finalize() {&#10;        if (nativeHandle != 0L) {&#10;            nativeDestroy(nativeHandle)&#10;            nativeHandle = 0L&#10;        }&#10;    }&#10;&#10;    companion object {&#10;        init {&#10;            System.loadLibrary(&quot;shkuba&quot;)&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/build.gradle.kts" />
              <option name="originalContent" value="// Top-level build file where you can add configuration options common to all sub-projects/modules.&#10;plugins {&#10;    alias(libs.plugins.android.application) apply false&#10;    alias(libs.plugins.kotlin.android) apply false&#10;    alias(libs.plugins.kotlin.compose) apply false&#10;}&#10;&#10;allprojects {&#10;    repositories {&#10;        // Removed repository declarations to avoid conflict with settings.gradle.kts&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="// Top-level build file where you can add configuration options common to all sub-projects/modules.&#10;plugins {&#10;    alias(libs.plugins.android.application) apply false&#10;    alias(libs.plugins.kotlin.android) apply false&#10;}&#10;&#10;allprojects {&#10;    // Removed repository declarations to avoid conflict with settings.gradle.kts&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/gradle/libs.versions.toml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/gradle/libs.versions.toml" />
              <option name="originalContent" value="[versions]&#10;agp = &quot;8.1.4&quot;&#10;kotlin = &quot;1.9.20&quot;&#10;coreKtx = &quot;1.15.0&quot;&#10;junit = &quot;4.13.2&quot;&#10;junitVersion = &quot;1.2.1&quot;&#10;espressoCore = &quot;3.6.1&quot;&#10;lifecycleRuntimeKtx = &quot;2.8.7&quot;&#10;activityCompose = &quot;1.9.3&quot;&#10;composeBom = &quot;2024.04.01&quot;&#10;firebaseBom = &quot;32.2.3&quot;&#10;&#10;[libraries]&#10;androidx-core-ktx = { group = &quot;androidx.core&quot;, name = &quot;core-ktx&quot;, version.ref = &quot;coreKtx&quot; }&#10;junit = { group = &quot;junit&quot;, name = &quot;junit&quot;, version.ref = &quot;junit&quot; }&#10;androidx-junit = { group = &quot;androidx.test.ext&quot;, name = &quot;junit&quot;, version.ref = &quot;junitVersion&quot; }&#10;androidx-espresso-core = { group = &quot;androidx.test.espresso&quot;, name = &quot;espresso-core&quot;, version.ref = &quot;espressoCore&quot; }&#10;androidx-lifecycle-runtime-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-runtime-ktx&quot;, version.ref = &quot;lifecycleRuntimeKtx&quot; }&#10;androidx-activity-compose = { group = &quot;androidx.activity&quot;, name = &quot;activity-compose&quot;, version.ref = &quot;activityCompose&quot; }&#10;androidx-compose-bom = { group = &quot;androidx.compose&quot;, name = &quot;compose-bom&quot;, version.ref = &quot;composeBom&quot; }&#10;androidx-ui = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui&quot; }&#10;androidx-ui-graphics = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-graphics&quot; }&#10;androidx-ui-tooling = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-tooling&quot; }&#10;androidx-ui-tooling-preview = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-tooling-preview&quot; }&#10;androidx-ui-test-manifest = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-test-manifest&quot; }&#10;androidx-ui-test-junit4 = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-test-junit4&quot; }&#10;androidx-material3 = { group = &quot;androidx.compose.material3&quot;, name = &quot;material3&quot; }&#10;firebase-bom = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-bom&quot;, version.ref = &quot;firebaseBom&quot; }&#10;firebase-firestore = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-firestore-ktx&quot; }&#10;firebase-auth = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-auth-ktx&quot; }&#10;&#10;[plugins]&#10;android-application = { id = &quot;com.android.application&quot;, version.ref = &quot;agp&quot; }&#10;kotlin-android = { id = &quot;org.jetbrains.kotlin.android&quot;, version.ref = &quot;kotlin&quot; }&#10;kotlin-compose = { id = &quot;org.jetbrains.kotlin.plugin.compose&quot;, version.ref = &quot;kotlin&quot; }&#10;&#10;&#10;" />
              <option name="updatedContent" value="[versions]&#10;agp = &quot;8.1.4&quot;&#10;kotlin = &quot;1.9.22&quot;&#10;coreKtx = &quot;1.15.0&quot;&#10;junit = &quot;4.13.2&quot;&#10;junitVersion = &quot;1.2.1&quot;&#10;espressoCore = &quot;3.6.1&quot;&#10;lifecycleRuntimeKtx = &quot;2.8.7&quot;&#10;activityCompose = &quot;1.9.3&quot;&#10;composeBom = &quot;2024.04.01&quot;&#10;firebaseBom = &quot;32.2.3&quot;&#10;&#10;[libraries]&#10;androidx-core-ktx = { group = &quot;androidx.core&quot;, name = &quot;core-ktx&quot;, version.ref = &quot;coreKtx&quot; }&#10;junit = { group = &quot;junit&quot;, name = &quot;junit&quot;, version.ref = &quot;junit&quot; }&#10;androidx-junit = { group = &quot;androidx.test.ext&quot;, name = &quot;junit&quot;, version.ref = &quot;junitVersion&quot; }&#10;androidx-espresso-core = { group = &quot;androidx.test.espresso&quot;, name = &quot;espresso-core&quot;, version.ref = &quot;espressoCore&quot; }&#10;androidx-lifecycle-runtime-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-runtime-ktx&quot;, version.ref = &quot;lifecycleRuntimeKtx&quot; }&#10;androidx-activity-compose = { group = &quot;androidx.activity&quot;, name = &quot;activity-compose&quot;, version.ref = &quot;activityCompose&quot; }&#10;androidx-compose-bom = { group = &quot;androidx.compose&quot;, name = &quot;compose-bom&quot;, version.ref = &quot;composeBom&quot; }&#10;androidx-ui = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui&quot; }&#10;androidx-ui-graphics = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-graphics&quot; }&#10;androidx-ui-tooling = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-tooling&quot; }&#10;androidx-ui-tooling-preview = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-tooling-preview&quot; }&#10;androidx-ui-test-manifest = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-test-manifest&quot; }&#10;androidx-ui-test-junit4 = { group = &quot;androidx.compose.ui&quot;, name = &quot;ui-test-junit4&quot; }&#10;androidx-material3 = { group = &quot;androidx.compose.material3&quot;, name = &quot;material3&quot; }&#10;firebase-bom = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-bom&quot;, version.ref = &quot;firebaseBom&quot; }&#10;firebase-firestore = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-firestore-ktx&quot; }&#10;firebase-auth = { group = &quot;com.google.firebase&quot;, name = &quot;firebase-auth-ktx&quot; }&#10;&#10;[plugins]&#10;android-application = { id = &quot;com.android.application&quot;, version.ref = &quot;agp&quot; }&#10;kotlin-android = { id = &quot;org.jetbrains.kotlin.android&quot;, version.ref = &quot;kotlin&quot; }&#10;kotlin-compose = { id = &quot;org.jetbrains.kotlin.plugin.compose&quot;, version = &quot;1.5.10&quot; }" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/settings.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/settings.gradle.kts" />
              <option name="originalContent" value="pluginManagement {&#10;    repositories {&#10;        google {&#10;            content {&#10;                includeGroupByRegex(&quot;com\\.android.*&quot;)&#10;                includeGroupByRegex(&quot;com\\.google.*&quot;)&#10;                includeGroupByRegex(&quot;androidx.*&quot;)&#10;            }&#10;        }&#10;        mavenCentral()&#10;        gradlePluginPortal()&#10;    }&#10;}&#10;dependencyResolutionManagement {&#10;    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)&#10;    repositories {&#10;        google()&#10;        mavenCentral()&#10;    }&#10;}&#10;&#10;rootProject.name = &quot;shkuba&quot;&#10;include(&quot;:app&quot;)&#10;" />
              <option name="updatedContent" value="pluginManagement {&#13;&#10;    repositories {&#13;&#10;        google {&#13;&#10;            content {&#13;&#10;                includeGroupByRegex(&quot;com\\.android.*&quot;)&#13;&#10;                includeGroupByRegex(&quot;com\\.google.*&quot;)&#13;&#10;                includeGroupByRegex(&quot;androidx.*&quot;)&#13;&#10;            }&#13;&#10;        }&#13;&#10;        mavenCentral()&#13;&#10;        gradlePluginPortal()&#13;&#10;        maven { url = uri(&quot;https://maven.pkg.jetbrains.space/public/p/compose/dev&quot;) }&#13;&#10;    }&#13;&#10;}&#13;&#10;dependencyResolutionManagement {&#13;&#10;    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)&#13;&#10;    repositories {&#13;&#10;        google()&#13;&#10;        mavenCentral()&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;rootProject.name = &quot;shkuba&quot;&#13;&#10;include(&quot;:app&quot;)" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>